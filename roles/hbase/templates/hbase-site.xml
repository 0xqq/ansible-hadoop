<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 * Copyright 2010 The Apache Software Foundation
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
    <property>
        <name>hbase.rootdir</name>
        <value>{{hbase.hbase_site.hbase_rootdir}}</value>
    </property>
    <property>
        <name>hbase.cluster.distributed</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.zookeeper.quorum</name>
        <value>{% for host in groups['zookeepers'] %}{% if not loop.last %}{{host}}:2181,{%else%}{{host}}:2181{% endif %}{% endfor %}</value>
    </property>
    <property>
        <name>hbase.regionserver.handler.count</name>
        <value>{{hbase.hbase_site.hbase_regionserver_handler_count}}</value>
    </property>
    <property>
        <name>dfs.replication</name>
        <value>{{hbase.hbase_site.dfs_replication}}</value>
    </property>
    <property>
        <name>hbase.hregion.max.filesize</name>
        <value>{{hbase.hbase_site.hbase_hregion_max_filesize}}</value>
    </property>
    <property>
        <name>hbase.regionserver.lease.period</name>
        <value>{{hbase.hbase_site.hbase_regionserver_lease_period}}</value>
    </property>
    <property>
        <name>hbase.rpc.timeout</name>
        <value>{{hbase.hbase_site.hbase_rpc_timeout}}</value>
    </property>
    <property>
        <name>dfs.socket.timeout</name>
        <value>{{hbase.hbase_site.dfs_socket_timeout}}</value>
    </property>
    <property>
        <name>dfs.datanode.socket.write.timeout</name>
        <value>0</value>
    </property>
    <property>
        <name>hbase.hregion.majorcompaction</name>
        <value>0</value>
    </property>
    
    <!-- SEP is basically replication, so enable it -->
    <property>
        <name>hbase.replication</name>
        <value>true</value>
    </property>
    
    <!-- Source ratio of 100% makes sure that each SEP consumer is actually
    used (otherwise, some can sit idle, especially with small clusters) -->
    <property>
        <name>replication.source.ratio</name>
        <value>1.0</value>
    </property>
    
    <!-- Maximum number of hlog entries to replicate in one go. If this is
    large, and a consumer takes a while to process the events, the
    HBase rpc call will time out. -->
    <property>
        <name>replication.source.nb.capacity</name>
        <value>1000</value>
    </property>
    
    <!-- A custom replication source that fixes a few things and adds
    some functionality (doesn't interfere with normal replication
    usage). -->
    <property>
        <name>replication.replicationsource.implementation</name>
        <value>com.ngdata.sep.impl.SepReplicationSource</value>
    </property>
    
</configuration>
